---
import Image from "astro/components/Image.astro";
import dropDownIcon from "../../assets/arrow_drop_down.svg";
import silosAereos from "../../assets/silos-aereos.jpg";
import silosComederos from "../../assets/silos-comederos.jpg";
import { Picture } from "astro:assets";

interface Props {
  link: string;
  label: string;
  isSubMenu?: boolean;
  styles?: string;
}

const { link, label, isSubMenu = false, styles = "" } = Astro.props;
---

<li
  class={`uppercase text-slate-800 flex items-center relative ${styles}`}
  id={isSubMenu ? `${label.toLowerCase()}-hover` : ""}>
  <a
    href={link}
    class="text-stone-200 md:text-slate-800"
    >{label}</a
  >
  {
    isSubMenu && (
      <>
        <Image
          src={dropDownIcon}
          alt="drop down icon"
          class="md:inline-block ml-1 hidden"
        />
      </>
    )
  }
</li>

{
  isSubMenu && (
    <div
      id="dropdown-silos-menu"
      class="hidden fixed left-0 top-20 w-screen bg-slate-800 text-white py-6 px-20 justify-end gap-10 shadow-lg z-50 opacity-0 translate-y-2 transition-all duration-300 ease-out">
      <article class="flex flex-col items-center justify-center gap-1">
        <a
          href="/silos/aereos"
          class="text-center">
          <Picture
            alt="silos aéreos"
            src={silosAereos}
            layout="constrained"
            width={220}
            class="rounded max-h-56"
          />
          Silos Aéreos
        </a>
      </article>
      <article class="flex flex-col items-center justify-center gap-1">
        <a
          href="/silos/comederos"
          class="text-center">
          <Picture
            alt="silos comederos"
            src={silosComederos}
            layout="constrained"
            width={220}
            class="rounded max-h-56"
          />
          Silos Comederos
        </a>
      </article>
    </div>
  )
}

<script>
  const silosHoverComponent = document.getElementById("silos-hover");
  const dropdownComponet = document.getElementById("dropdown-silos-menu");
  let hideTimeout: ReturnType<typeof setTimeout>;

  if (silosHoverComponent && dropdownComponet) {
    const showDropdown = () => {
      clearTimeout(hideTimeout);
      dropdownComponet.classList.remove("hidden", "opacity-0", "translate-y-2");
      dropdownComponet.classList.add("flex", "opacity-100", "translate-y-0");
    };

    const hideDropdown = () => {
      hideTimeout = setTimeout(() => {
        dropdownComponet.classList.add("opacity-0", "translate-y-2");
        setTimeout(() => {
          dropdownComponet.classList.add("hidden");
          dropdownComponet.classList.remove("flex");
        }, 200);
      }, 200);
    };

    silosHoverComponent.addEventListener("mouseenter", showDropdown);
    silosHoverComponent.addEventListener("mouseleave", hideDropdown);
    dropdownComponet.addEventListener("mouseenter", showDropdown);
    dropdownComponet.addEventListener("mouseleave", hideDropdown);
  }
</script>
