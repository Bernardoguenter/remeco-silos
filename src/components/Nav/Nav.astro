---
import MenuItem from "./MenuItem.astro";
import MenuItemMobile from "./MenuItemMobile.astro";
import MenuIcon from "@assets/svg/MenuIcon.astro";
import CloseIcon from "@assets/svg/CloseIcon.astro";
---

<!-- NAV DESKTOP -->
<nav class="hidden md:block">
  <ul class="flex justify-end gap-6 text-slate-800">
    <MenuItem
      link="/"
      label="Inicio"
    />
    <MenuItem
      link="/silos"
      label="Silos"
      isSubMenu={true}
    />
    <MenuItem
      link="/contacto"
      label="Contacto"
    />
  </ul>
</nav>

<!-- NAV MOBILE -->
<nav class="block md:hidden">
  <div
    id="menu-toggle"
    class="cursor-pointer z-50 relative w-7 h-7">
    <MenuIcon
      style="absolute opacity-100"
      color="#f5f5f5"
      id="icon-menu"
    />
    <CloseIcon
      style="absolute opacity-0"
      color="#f5f5f5"
      id="icon-close"
    />
  </div>

  <ul
    id="mobile-menu-ul"
    class="hidden flex-col items-end absolute right-0 top-20 w-screen text-slate-800 p-6 shadow-lg z-40 opacity-0 translate-y-2 transition-all duration-300 ease-out bg-slate-800 gap-3">
    <MenuItemMobile
      link="/"
      label="Inicio"
      styles="border-b-stone-200"
    />
    <MenuItemMobile
      link="/silos"
      label="Silos"
      isSubMenu={true}
    />
    <MenuItemMobile
      link="/contacto"
      label="Contacto"
    />
  </ul>
</nav>

<script>
  document.addEventListener("astro:page-load", () => {
    const toggleBtn = document.getElementById("menu-toggle");
    const iconMenu = document.getElementById("icon-menu");
    const iconClose = document.getElementById("icon-close");
    const mobileMenu = document.getElementById("mobile-menu-ul");
    const menuLinks = mobileMenu?.querySelectorAll("a");
    let isOpen = false;

    const openMenu = () => {
      mobileMenu?.classList.remove("hidden", "opacity-0", "translate-y-2");
      mobileMenu?.classList.add("flex", "opacity-100", "translate-y-0");

      iconMenu?.classList.remove("opacity-100");
      iconMenu?.classList.add("opacity-0");

      iconClose?.classList.remove("opacity-0");
      iconClose?.classList.add("opacity-100");

      isOpen = true;
    };

    const closeMenu = () => {
      mobileMenu?.classList.add("opacity-0", "translate-y-2");
      setTimeout(() => {
        mobileMenu?.classList.add("hidden");
        mobileMenu?.classList.remove("flex");
      }, 200);

      iconMenu?.classList.remove("opacity-0");
      iconMenu?.classList.add("opacity-100");

      iconClose?.classList.remove("opacity-100");
      iconClose?.classList.add("opacity-0");

      isOpen = false;
    };

    toggleBtn?.addEventListener("click", () => {
      isOpen ? closeMenu() : openMenu();
    });

    menuLinks?.forEach((link) => {
      link.addEventListener("click", () => closeMenu());
    });

    document.addEventListener("click", (e) => {
      if (
        isOpen &&
        !mobileMenu?.contains(e.target as Node) &&
        e.target !== toggleBtn &&
        !toggleBtn?.contains(e.target as Node)
      ) {
        closeMenu();
      }
    });
  });
</script>
